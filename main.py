# -*- coding: utf-8 -*-
"""Untitled21.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1szinY9VP-_ISuvYPOoL_OOsVQrPBaIUv
"""

import spacy

# Load the English language model
nlp = spacy.load("en_core_web_sm")

# List of tags
tags = ["introduction", "countries and cultures", "languages", "recent developments", "economics"]

# Function to tag each sentence using Named Entity Recognition (NER)
def tag_sentences_ner(transcript, tags):
    tagged_sentences = []
    doc = nlp(transcript)
    for sentence in doc.sents:
        tagged_sentence = {'text': sentence.text, 'tags': []}
        for ent in sentence.ents:
            if ent.label_ == "GPE":
                tagged_sentence['tags'].append("countries and cultures")
            elif ent.label_ == "LANGUAGE":
                tagged_sentence['tags'].append("languages")
            # Add more conditions based on other relevant entity labels for other tags
        tagged_sentences.append(tagged_sentence)
    return tagged_sentences

# Read transcript from a file
def read_transcript_from_file(file_path):
    with open(file_path, 'r') as file:
        transcript = file.read()
    return transcript

# Input file path
file_path = "transcript.txt"  # Provide the path to your transcript file

# Read the transcript from the file
transcript = read_transcript_from_file(file_path)

# Tag the sentences in the transcript using NER
tagged_transcript = tag_sentences_ner(transcript, tags)

# Print the tagged transcript
for sentence in tagged_transcript:
    print("Sentence:", sentence['text'])
    print("Tags:", sentence['tags'])
    print()

